.row
  %table.table
    %thead
      %tr
        %th Key
        %th Value
    %tbody
      - server_properties.each do |prop|
        %tr
          %td= prop[0]
          %td
            - if prop[0] =~ /password/i
              = '*' * prop[1].length
            - else
              = prop[1]
            - if prop[0] =~ /^resource-pack$/i && prop[1].empty?
              %button.btn.btn-info.badge{style: 'float: right', type: :button, data: { toggle: :modal, target: '#explain_command'}} Suggestion
              .modal.fade{id: :explain_command, tabindex: -1, role: :dialog, 'aria-labelledby' => 'explain_command_label', 'aria-hidden' => true}
                .modal-dialog
                  .modal-content
                    .modal-header
                      %button.close{type: :button, 'aria-label' => 'Close', data: { dismiss: :modal }}
                        %span{'aria-hidden' => true} &times;
                      %h4.modal-title{id: "explain_command_label"} Resource Pack Suggestion
                    .modal-body
                      %p You can enable CobbleBot sounds by setting the following value:
                      %code resource-pack=https\://www.dropbox.com/s/uq143k8dlftccla/swim_resource_pack.zip?dl\=1
            - if prop[0] =~ /^resource-pack-hash$/i && !!@resource_pack_hash && prop[1] != @resource_pack_hash && !!server_properties['resource-pack']
              %button.btn.btn-info.badge{style: 'float: right', type: :button, data: { toggle: :modal, target: '#explain_command'}} Suggestion
              .modal.fade{id: :explain_command, tabindex: -1, role: :dialog, 'aria-labelledby' => 'explain_command_label', 'aria-hidden' => true}
                .modal-dialog
                  .modal-content
                    .modal-header
                      %button.close{type: :button, 'aria-label' => 'Close', data: { dismiss: :modal }}
                        %span{'aria-hidden' => true} &times;
                      %h4.modal-title{id: "explain_command_label"} Resource Pack Hash Suggestion
                    .modal-body
                      %p You should set this to the correct hash value to match the resource-pack.  Doing so helps players log in faster by allowing them to skip the download if the hash hasn't changed.
                      %p Suggestion:
                      %code resource-pack-hash=#{@resource_pack_hash}
                      - if prop[1].present?
                        %p
                        %p ... instead of what you have:
                        %code resource-pack-hash=#{prop[1]}
            - if prop[0] =~ /^announce-player-achievements$/i && prop[1] != 'true'
              %button.btn.btn-info.badge{style: 'float: right', type: :button, data: { toggle: :modal, target: '#explain_command'}} Suggestion
              .modal.fade{id: :explain_command, tabindex: -1, role: :dialog, 'aria-labelledby' => 'explain_command_label', 'aria-hidden' => true}
                .modal-dialog
                  .modal-content
                    .modal-header
                      %button.close{type: :button, 'aria-label' => 'Close', data: { dismiss: :modal }}
                        %span{'aria-hidden' => true} &times;
                      %h4.modal-title{id: "explain_command_label"} Announce Player Achievements
                    .modal-body
                      %p You can enable certain CobbleBot callback events by enabling player achievement announcements.
                      %p Suggestion:
                      %code announce-player-achievements=true
            - if prop[0] =~ /^online-mode$/i && prop[1] != 'true'
              %button.btn.btn-info.badge{style: 'float: right', type: :button, data: { toggle: :modal, target: '#explain_command'}} Suggestion
              .modal.fade{id: :explain_command, tabindex: -1, role: :dialog, 'aria-labelledby' => 'explain_command_label', 'aria-hidden' => true}
                .modal-dialog
                  .modal-content
                    .modal-header
                      %button.close{type: :button, 'aria-label' => 'Close', data: { dismiss: :modal }}
                        %span{'aria-hidden' => true} &times;
                      %h4.modal-title{id: "explain_command_label"} Online Mode
                    .modal-body
                      %p It's a really bad idea to run SMP in offline mode.
                      %p Suggestion:
                      %code online-mode=true
            - if prop[0] =~ /^enable-rcon$/i && prop[1] != 'true'
              %button.btn.btn-info.badge{style: 'float: right', type: :button, data: { toggle: :modal, target: '#explain_command'}} Suggestion
              .modal.fade{id: :explain_command, tabindex: -1, role: :dialog, 'aria-labelledby' => 'explain_command_label', 'aria-hidden' => true}
                .modal-dialog
                  .modal-content
                    .modal-header
                      %button.close{type: :button, 'aria-label' => 'Close', data: { dismiss: :modal }}
                        %span{'aria-hidden' => true} &times;
                      %h4.modal-title{id: "explain_command_label"} Enable RCON
                    .modal-body
                      %p Enabling RCON allows CobbleBot to interact with the server in magical ways.
                      %p Suggestion:
                      %code enable-rcon=true
